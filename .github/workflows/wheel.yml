name: Wheel and Test

on: workflow_dispatch

jobs:
  build:
    runs-on: ${{ matrix.config.os }}
    name: Build ${{ matrix.config.os }}-${{ matrix.config.arch }}
    strategy:
      matrix:
        config:
          - { os: "ubuntu-20.04", arch: "auto64" }
          - { os: "windows-2019", arch: "auto64" }
          - { os: "macos-11", arch: "auto64" }
          - { os: "macos-11", arch: "universal2" }
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: "true"
      - name: Install Dependencies
        run: |
          python3 -m pip install wheel
      - name: Build Wheels
        uses: pypa/cibuildwheel@v2.16.2
        env:
          CIBW_ARCHS: ${{ matrix.config.arch }}
          CIBW_BUILD: cp36-* cp38-macosx_universal2
          MACOSX_DEPLOYMENT_TARGET: "10.14"
      - name: List Build Results
        run: |
          ls wheelhouse
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: ./wheelhouse/*.whl
  run:
    name: Test on ${{ matrix.os }} with python ${{ matrix.python-version }}
    needs: [build]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, windows-2019, macos-11]
        python-version: ['3.6', '3.11']

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - uses: actions/download-artifact@v2
        with:
          name: wheels
          path: built_wheels
      - name: Install Dependencies
        run: python -m pip install trimesh numpy
      - name: Install Packages
        run: python -m pip install --no-index --find-links=./built_wheels coacd
      - name: Run Tests
        run: python run_tests.py -v
